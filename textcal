#!/usr/bin/env python

"""Usage:
    textcal
    textcal --generate <year>
    textcal --show <date>
    textcal -h | --help
    textcal --version

Options:
    -h --help   Show this screen.
    --version   Show version.
    --generate  Generate a calendar for year.
    --show      Show a date in vim (yyyy-mm-dd)

"""

CALENDAR = "/path/to/calendar.textcal"

__version__ = "0.0.1"

import docopt
from subprocess import call
import calendar
import datetime


def print_calendar(year, month):
    """Prints a text calendar of the year and month supplied."""

    cal = calendar.month(year, month)
    print(cal)


def print_days(year, month):
    """
    Prints each day in a month in the format:
    YYYY-MM-DD  A[:1]  :
    """
    day = 1
    last_day = calendar.monthrange(year, month)[1]

    while day <= last_day:
        # date
        date = datetime.date(year, month, day)

        # string date
        strdate = date.strftime('%Y-%m-%d')

        # full day of week
        dow = date.strftime('%A')

        # convert day of week(dow) into single character dayofweek
        if dow == "Monday":
            dayofweek = 'M'
        elif dow == "Tuesday":
            dayofweek = 'T'
        elif dow == "Wednesday":
            dayofweek = 'W'
        elif dow == "Thursday":
            dayofweek = 'R'
        elif dow == "Friday":
            dayofweek = 'F'
        else:
            dayofweek = 'S'

        # if it is the beginning of the week, print a new line first.
        if dayofweek == 'M':
            print("")
            print("%s  %s  :" % (strdate, dayofweek))
        else:
            print("%s  %s  :" % (strdate, dayofweek))

        day += 1

    # print ^^ at the end of the month (used for gawk printing stop pattern)
    print("^^\n")


def generate_calendar(YEAR):
    """
    for each month of the year, print calendar and then list of dates.
    """

    # Month start at January
    MONTH = 1

    while MONTH <= 12:
        print_calendar(YEAR, MONTH)
        print_days(YEAR, MONTH)
        MONTH += 1


def today():
    """
    Open vim at today's date
    """
    date = datetime.date.today()

    # string date
    strdate = date.strftime('%Y-%m-%d')
    # open vim to today's date
    call("vim +/" + strdate + " " + CALENDAR, shell=True)

if __name__ == '__main__':
    args = docopt.docopt(__doc__)
    if args['--version']:
        print("Version: " + __version__)
    elif args['--generate']:
        generate_calendar(int(args['<year>']))
    elif args['--show']:
        call("vim +/" + args['<date>'] + " " + CALENDAR, shell=True)
    else:
        today()
